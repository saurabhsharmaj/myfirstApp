package com.mahdi.myapp.model;


import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Where;


/**
 * Bookings generated by hbm2java
 */
@Entity
@Table(name = "bookings")
public class Bookings implements java.io.Serializable {

	private Integer id;
	private AppointmentSchedule appointmentSchedule;
	private BookingStatus bookingStatus;
	private UserProfile userProfileByDoctorId;
	private UserProfile userProfileByPatientId;
	private String diseasesDescription;
	private Date datetimeStart;
	private Date datetimeEnd;

	public Bookings() {
	}

	public Bookings(AppointmentSchedule appointmentSchedule, BookingStatus bookingStatus, UserProfile userProfileByDoctorId,
			UserProfile userProfileByPatientId, String diseasesDescription, Date datetimeStart, Date datetimeEnd) {
		this.appointmentSchedule = appointmentSchedule;
		this.bookingStatus = bookingStatus;
		this.userProfileByDoctorId = userProfileByDoctorId;
		this.userProfileByPatientId = userProfileByPatientId;
		this.diseasesDescription = diseasesDescription;
		this.datetimeStart = datetimeStart;
		this.datetimeEnd = datetimeEnd;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "appointment_schedule_id", nullable = false)
	public AppointmentSchedule getAppointmentSchedule() {
		return this.appointmentSchedule;
	}

	public void setAppointmentSchedule(AppointmentSchedule appointmentSchedule) {
		this.appointmentSchedule = appointmentSchedule;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_id", nullable = false)
	public BookingStatus getBookingStatus() {
		return this.bookingStatus;
	}

	public void setBookingStatus(BookingStatus bookingStatus) {
		this.bookingStatus = bookingStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id", nullable = false, insertable = false, updatable = false)
	@Where(clause = "role=2")
	public UserProfile getUserProfileByDoctorId() {
		return this.userProfileByDoctorId;
	}

	public void setUserProfileByDoctorId(UserProfile userProfileByDoctorId) {
		this.userProfileByDoctorId = userProfileByDoctorId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id", nullable = false,insertable = false, updatable = false)
	@Where(clause = "role=3")
	public UserProfile getUserProfileByPatientId() {
		return this.userProfileByPatientId;
	}

	public void setUserProfileByPatientId(UserProfile userProfileByPatientId) {
		this.userProfileByPatientId = userProfileByPatientId;
	}

	@Column(name = "diseases_description", nullable = false, length = 65535)
	public String getDiseasesDescription() {
		return this.diseasesDescription;
	}

	public void setDiseasesDescription(String diseasesDescription) {
		this.diseasesDescription = diseasesDescription;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datetime_start", nullable = false, length = 19)
	public Date getDatetimeStart() {
		return this.datetimeStart;
	}

	public void setDatetimeStart(Date datetimeStart) {
		this.datetimeStart = datetimeStart;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datetime_end", nullable = false, length = 19)
	public Date getDatetimeEnd() {
		return this.datetimeEnd;
	}

	public void setDatetimeEnd(Date datetimeEnd) {
		this.datetimeEnd = datetimeEnd;
	}

}
