<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
   xsi:schemaLocation="http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security-3.2.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">
 
   <http use-expressions="true">
   
   	   <intercept-url pattern="/getAppointment/**" access="isAnonymous()" /> 	
   	   <intercept-url pattern="/" access="isAnonymous()" />
       <intercept-url pattern="/home" access="isAnonymous()" />
       <intercept-url pattern="/login" access="isAnonymous()" />
       <intercept-url pattern="/logout" access="isAnonymous()" />
       <intercept-url pattern="/resource/**" access="isAnonymous()" />
       
   	   <intercept-url pattern="/doctor/**" access="hasAnyRole('ROLE_DOCTOR','ROLE_ADMIN')"/>
   	   <intercept-url pattern="/patient/**" access="hasAnyRole('ROLE_PATIENT','ROLE_ADMIN')"/>
       <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />      
 
       <access-denied-handler error-page="/403" />
 
       <form-login login-page='/login' login-processing-url="/j_spring_security_check"
           default-target-url="/userInfo" always-use-default-target="false"        
           authentication-failure-handler-ref="authenticationFailureHandler" username-parameter="username"
           password-parameter="password" />
 
       <logout logout-url="/logout" logout-success-url="/logoutSuccessful"
           delete-cookies="JSESSIONID" invalidate-session="true" />
 
 		<!-- <session-management invalid-session-url="/logout">
	    	<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management> -->
		
	
   </http>
 
   <authentication-manager>
       <!-- <authentication-provider>
           <user-service>
           	   <user name="all" password="all" authorities="ROLE_USER,ROLE_DOCTOR,ROLE_ADMIN" />
               <user name="admin" password="admin" authorities="ROLE_ADMIN" />
               <user name="doctor" password="doctor" authorities="ROLE_DOCTOR" />
               <user name="user" password="user" authorities="ROLE_USER" />
           </user-service>
       </authentication-provider>  -->
 
       <!-- authentication from database -->
       <authentication-provider>
           <jdbc-user-service data-source-ref="myDataSource"
		  users-by-username-query=
		    "select username, password, enabled from users where enabled =true and username=? "
		  authorities-by-username-query=
		    "select username, code from users u , user_roles ur, user_role_mapping urm where u.id = urm.user_id and ur.id = urm.role and u.username = ?  " />
       </authentication-provider>
 		
   </authentication-manager>
   
 	
 
</beans:beans>